#
# The gh-pages site at 'https://j-keck.github.io/zsd
# are generated from this file
#
#+title: zsd
#+hugo_base_dir: ./doc/site
#+options: creator:t author:nil

* Index
:PROPERTIES:
:export_title: zsd
:export_file_name: _index
:export_hugo_section: /
:export_hugo_weight: 10
:export_hugo_type: docs
:END:

~zsd~ - cli tool to find older versions of a given file in your zfs snapshots.

With ~zsd~ you can

  - find older file versions in your zfs snapshots for a given file

  - view the file content from a given snapshot

  - inspect a diff from the older version to the actual version

  - revert a single change

  - restore a version from a zfs snapshot

  - grep changes

/For a browser based version see [[https://j-keck.github.io/zfs-snap-diff][zfs-snap-diff]]./

** License

~zsd~ is released under the **MIT** License.
See the [[https://github.com/j-keck/zsd/blob/master/LICENSE][license file]] for more information.


* Installation
  :PROPERTIES:
  :export_file_name: install
  :export_hugo_weight: 20
  :export_hugo_section: docs
  :END:

You can download the latest binary from here or from the [[https://github.com/j-keck/zsd/releases][GitHub release page]].

 #+BEGIN_SRC elisp :results output raw :exports results
   (defun version-string ()
       "Lookup the latest `zsd version."
       (s-trim-right (shell-command-to-string "git describe --tags --always --abbrev=0 --match 'v[0-9].[0-9].[0-9]'")))

     (defun section-for (title version goos)
       (let ((artifact (format "zsd-%s-%s.tgz" goos version)))
             (format (concat "{{< tab \"%s\" >}}\n"
                             "  1.) **Download** the latest version: "
                             "[[https://github.com/j-keck/zsd/releases/download/%s/%s][%s]]\n\n"
                             "  2.) Run it:  ~./zsd <FILE> <ACTION>~\n"
                             "{{< /tab >}}\n\n"
                             ) title version artifact artifact)))

     (letrec ((v  (version-string)))
       (princ "\n\n{{<tabs \"install\">}}\n")
       (princ (section-for "Linux (x64)"   v "linux"))
       (princ (section-for "FreeBSD (x64)" v "freebsd"))
       (princ (section-for "Solaris (x64)" v "solaris"))
       (princ (section-for "Mac OS (x64)"  v "darwin"))
       (princ "{{< /tabs >}}\n\n")))
 #+END_SRC

Checkout [[/docs/usage][Usage]] how to use it.

* Usage
  :PROPERTIES:
  :export_file_name: usage
  :export_hugo_weight: 30
  :export_hugo_section: docs
  :END:


** List snapshots

Use the ~list~ action to list all snapshots where the
given file was modified.

~zsd~ lists only snapshots where the given file was modified.
You can adjust the number of days to scan with the ~-d~ flag.

 #+BEGIN_EXAMPLE
 main⟩ zsd main.go list
scan the last 2 days for other file versions
  # | File changed | Snapshot                                 | Snapshot age
----------------------------------------------------------------------------
  0 |   20 minutes | zfs-auto-snap_frequent-2020-07-12-14h00U |   18 minutes
  1 |   34 minutes | zfs-auto-snap_frequent-2020-07-12-13h45U |   33 minutes
  2 |   49 minutes | zfs-auto-snap_frequent-2020-07-12-13h30U |   48 minutes
 #+END_EXAMPLE

** Show file content

Use the ~cat~ action to show the file content from
the given snapshot.

{{< hint info >}}
You can use the snapshot number from the ~list~ output
or the snapshot name to select a snapshot.
{{< /hint >}}

 #+BEGIN_EXAMPLE
 # i use `head` here to keep the example short
 main⟩ zsd main.go cat 2 | head -5
package main

import (
	"errors"
	"flag"
 #+END_EXAMPLE

** Show diff

To show a diff from the selected snapshot to the actual version
use the ~diff~ action.

{{< hint info >}}
You can use the snapshot number from the ~list~ output
or the snapshot name to select a snapshot.
{{< /hint >}}

 #+BEGIN_EXAMPLE
 # i use `head` here to keep the example short
 main⟩ zsd -no-color -diff-context-size 2 main.go diff 1  | head -30
Diff from the actual version to the version from: 2020-07-12 15:44:43.566374368 +0200 CEST
=============================
Chunk 0 - starting at line 43
-----------------------------
        fmt.Fprintf(os.Stderr, "  revert  <#|SNAPSHOT> <CHUNK_NR>: revert the given chunk\n")
		fmt.Fprintf(os.Stderr, "  restore <#|SNAPSHOT>           : restore the file from the given snapshot\n")
-       fmt.Fprintf(os.Stderr, "  grep    <PATTERN>              : grep changed lines\n")
+       fmt.Fprintf(os.Stderr, "  grep    <PATTERN>              : grep changes\n")
        fmt.Fprintf(os.Stderr, "\nYou can use the snapshot number from the `list` output or the snapshot name to select a snapshot.\n")
		fmt.Fprintf(os.Stderr, "\nProject home page: https://j-keck.github.io/zsd\n")

==============================
Chunk 1 - starting at line 264
------------------------------
        pattern := strings.ToLower(flag.Arg(2))

+       if !cliCfg.scriptingOutput {
+           fmt.Printf("scan the last %d days for other file versions\n", config.Get.DaysToScan)
+       }

        dr := scanner.NDaysBack(config.Get.DaysToScan, time.Now())
		sc := scanner.NewScanner(dr, "auto", ds, zfs)

==============================
Chunk 2 - starting at line 272
------------------------------
        }
 #+END_EXAMPLE

** Revert a change

You can revert a single change with the ~revert~ action.

**** View a diff to the backup version

#+BEGIN_EXAMPLE
main⟩ zsd -diff-context-size 1 -no-color cache.go diff 0
Diff from the actual version to the version from: 2020-07-04 14:29:37.807643286 +0200 CEST
=============================
Chunk 0 - starting at line 13
-----------------------------
	j, err := json.Marshal(versions)
+	println(err)
	if err != nil {

=============================
Chunk 1 - starting at line 18
-----------------------------
	cacheDir, err := fs.CacheDir()
+	println(err)
	if err != nil {

#+END_EXAMPLE


**** Revert a single change

Use the chunk-nr from the ~diff~ output to select the change to revert.
See the **Chunk &lt;NR&gt;** line to get it.

#+BEGIN_EXAMPLE
main⟩ ./zsd -diff-context-size 1 -no-color cache.go revert 0 1
backup from the actual version created at: /home/j/.cache/zfs-snap-diff/backups/home/j/prj/priv/zfs-snap-diff/zsd/cache.go_20200704_144023
reverted:
	cacheDir, err := fs.CacheDir()
+	println(err)
	if err != nil {

#+END_EXAMPLE

**** Check the result

#+BEGIN_EXAMPLE
main⟩ zsd -diff-context-size 1 -no-color cache.go diff 0
Diff from the actual version to the version from: 2020-07-04 14:29:37.807643286 +0200 CEST
=============================
Chunk 0 - starting at line 13
-----------------------------
	j, err := json.Marshal(versions)
+	println(err)
	if err != nil {

#+END_EXAMPLE

{{< hint warning >}}
A backup of the current version will be created.
{{< /hint >}}

** Restore file

To restore a given file with an older version use ~restore~.

{{< hint info >}}
You can use the snapshot number from the ~list~ output
or the snapshot name to select a snapshot.
{{< /hint >}}

 #+BEGIN_EXAMPLE
 main⟩ zsd go.mod restore 0
 backup from the actual version created at: /home/j/.cache/zfs-snap-diff/backups/home/j/prj/priv/zfs-snap-diff/go.mod_20200212_182709%
 version restored from snapshot: zfs-auto-snap_hourly-2020-02-12-12h00U
 #+END_EXAMPLE

{{< hint warning >}}
A backup of the current version will be created.
{{< /hint >}}


** Grep changes

You can search changes with ~grep <PATTERN>~. This search only changed lines.

To view the whole diff use the snapshot number or snapshot name from the output.

#+BEGIN_EXAMPLE
 main⟩ zsd main.go grep trim
scan the last 2 days for other file versions
  # | File changed | Snapshot                                 | Snapshot age |  Line | Change
------------------------------------------------------------------------------------------------------------------------
  3 |      1 hours |   zfs-auto-snap_hourly-2020-07-12-13h00U |      2 hours |   285 | + line := strings.TrimSpace(line)

#+END_EXAMPLE

** Flags

Use the ~-h~ flag to see the supported flags.

#+BEGIN_EXAMPLE
main⟩ zsd -h
zsd - cli tool to find older versions of a given file in your zfs snapshots.

USAGE:
 ./zsd [OPTIONS] <FILE> <ACTION>

OPTIONS:
  -H	Scripting mode. Do not print headers, print absolute dates and separate fields by a single tab
  -V	print version and exit
  -d int
        days to scan (default 2)
 -mount-snapshots
        mount snapshot (only necessary if it's not mounted by zfs automatically)
 -snapshot-timemachine
        Special output for Snapshot-timemachine (https://github.com/mrBliss/snapshot-timemachine)
 -use-sudo
        use sudo when executing 'zfs' commands
  -v	debug output
  -vv
        trace output with caller location

ACTIONS:
  list                           : list zfs snapshots where the given file was modified
  cat     <#|SNAPSHOT>           : show the file content from the given snapshot
  diff    <#|SNAPSHOT>           : show a diff from the selected snapshot to the current version
  revert  <#|SNAPSHOT> <CHUNK_NR>: revert the given chunk
  restore <#|SNAPSHOT>           : restore the file from the given snapshot
  grep    <PATTERN>              : grep changes

You can use the snapshot number from the `list` output or the snapshot name to select a snapshot.

Project home page: https://j-keck.github.io/zsd
#+END_EXAMPLE


* Changelog
:PROPERTIES:
:export_file_name: changelog
:export_hugo_weight: 50
:export_hugo_section: docs
:END:

** 1.3.0

  - new action: ~grep~ to search changes ([[https://j-keck.github.io/zsd/docs/usage/#grep-changes][Usage]])

[[https://github.com/j-keck/zsd/compare/v1.2.0...v1.3.0][all commits from v1.2.0 to v1.3.0]]

** 1.2.0

  - new action: revert to revert a single change ([[https://j-keck.github.io/zsd/docs/usage/#revert-a-change][Usage]])
  - show age in hours if it's younger than 48 hours
  - diff context size configurable (flag: -diff-context-size 3)
  - show diff in chunks
  - include "File changed" age in list action

[[https://github.com/j-keck/zsd/compare/v1.1.2...v1.2.0][all commits from v1.1.2 to v1.2.0]]

** 1.1.2

 - update ~-snapshot-timemachine~ format
   - use the file timestamp instead of the snapshot timestamp
   - change the timestamp format

[[https://github.com/j-keck/zsd/compare/v1.1.1...v1.1.2][all commits from v1.1.1 to v1.1.2]]

** 1.1.1

Import from [[https://j-keck.github.io/zfs-snap-diff][zfs-snap-diff]].

* Contact / Support
  :PROPERTIES:
  :export_file_name: contact-support
  :export_hugo_weight: 60
  :export_hugo_section: docs
  :END:


** Contact

{{< columns >}}
[[https://github.com/j-keck][{{< fas envelope lg >}} Check my GitHub Profile for my mail address.]]
<--->
[[https://twitter.com/jhyphenkeck][{{< fab twitter lg >}} Send me an direct message on twitter.]]
<--->
[[https://keybase.io/jkeck][{{< fab keybase lg >}} Use keybase to contact me.]]
{{< /columns >}}


** Support

If you have any questions, trouble or other input, feel free to contact
me directly (see [[/docs/contact-support#contact][Contact]]) or open a [[https://github.com/j-keck/zsd/issues/new][issue@github]].
